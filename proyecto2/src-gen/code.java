// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/code.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class code {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=10;
      Object coder=$fix(code.createTransducer());
      $line=12;
      System.out.println($message(new Object[]{"Input strings of the form: "}));
      $line=13;
      System.out.println($message(new Object[]{"w1!w2!w3!...!w\uD835\uDC5B\u22121!w\uD835\uDC5B# with n >= 2 and w\uD835\uDC56 in ('a'..'d')"}));
      $line=14;
      Utilities.test($cast(gold.structures.automaton.IAutomaton.class,coder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"main",$line);
    }
  }
  public static ITransducer createTransducer() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=18;
      Object letras=$fix(GCollections.asSet('a','b','c','d'));
      $line=19;
      Object contador=$fix(GCollections.asSet(0,1,2,3));
      $line=20;
      Object binario=$fix(GCollections.asSet(0,1));
      $line=22;
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object x:GCollections.unmodifiableCollection(letras)) {
        for (Object y:GCollections.unmodifiableCollection(letras)) {
          for (Object z:GCollections.unmodifiableCollection(letras)) {
            for (Object m:GCollections.unmodifiableCollection(letras)) {
              for (Object n:GCollections.unmodifiableCollection(letras)) {
                for (Object i:GCollections.unmodifiableCollection(contador)) {
                  for (Object f:GCollections.unmodifiableCollection(binario)) {
                    for (Object o:GCollections.unmodifiableCollection(binario)) {
                      $v1.add(GCollections.asList(x,y,z,m,n,'v',i,f,o));
                    }
                  }
                }
              }
            }
          }
        }
      }
      gold.structures.set.ISet $v3=$newSet();
      $v4:for (Object x:GCollections.unmodifiableCollection(letras)) {
        for (Object y:GCollections.unmodifiableCollection(letras)) {
          for (Object z:GCollections.unmodifiableCollection(letras)) {
            for (Object m:GCollections.unmodifiableCollection(letras)) {
              for (Object i:GCollections.unmodifiableCollection(contador)) {
                for (Object f:GCollections.unmodifiableCollection(binario)) {
                  for (Object o:GCollections.unmodifiableCollection(binario)) {
                    $v3.add(GCollections.asList(x,y,z,m,'v','v',i,f,o));
                  }
                }
              }
            }
          }
        }
      }
      gold.structures.set.ISet $v5=$newSet();
      $v6:for (Object x:GCollections.unmodifiableCollection(letras)) {
        for (Object y:GCollections.unmodifiableCollection(letras)) {
          for (Object z:GCollections.unmodifiableCollection(letras)) {
            for (Object i:GCollections.unmodifiableCollection(contador)) {
              for (Object f:GCollections.unmodifiableCollection(binario)) {
                for (Object o:GCollections.unmodifiableCollection(binario)) {
                  $v5.add(GCollections.asList(x,y,z,'v','v','v',i,f,o));
                }
              }
            }
          }
        }
      }
      gold.structures.set.ISet $v7=$newSet();
      $v8:for (Object x:GCollections.unmodifiableCollection(letras)) {
        for (Object y:GCollections.unmodifiableCollection(letras)) {
          for (Object i:GCollections.unmodifiableCollection(contador)) {
            for (Object f:GCollections.unmodifiableCollection(binario)) {
              for (Object o:GCollections.unmodifiableCollection(binario)) {
                $v7.add(GCollections.asList(x,y,'v','v','v','v',i,f,o));
              }
            }
          }
        }
      }
      gold.structures.set.ISet $v9=$newSet();
      $v10:for (Object x:GCollections.unmodifiableCollection(letras)) {
        for (Object i:GCollections.unmodifiableCollection(contador)) {
          for (Object f:GCollections.unmodifiableCollection(binario)) {
            for (Object o:GCollections.unmodifiableCollection(binario)) {
              $v9.add(GCollections.asList(x,'v','v','v','v','v',i,f,o));
            }
          }
        }
      }
      gold.structures.set.ISet $v11=$newSet();
      $v12:for (Object x:GCollections.unmodifiableCollection(letras)) {
        for (Object y:GCollections.unmodifiableCollection(letras)) {
          for (Object z:GCollections.unmodifiableCollection(letras)) {
            for (Object m:GCollections.unmodifiableCollection(letras)) {
              for (Object n:GCollections.unmodifiableCollection(letras)) {
                for (Object p:GCollections.unmodifiableCollection(letras)) {
                  for (Object i:GCollections.unmodifiableCollection(contador)) {
                    for (Object f:GCollections.unmodifiableCollection(binario)) {
                      for (Object o:GCollections.unmodifiableCollection(binario)) {
                        $v11.add(GCollections.asList(x,y,z,m,n,p,i,f,o));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      Object Q=$fix($opUnionY($opUnionY($opUnionY($opUnionY($opUnionY($opUnionY(GCollections.asSet('I','E','F','R'),$v1),$v3),$v5),$v7),$v9),$v11));
      $line=31;
      Object \u03A3=$fix(GCollections.asSet('a','b','c','d','!','#'));
      $line=32;
      Object Output=$fix(GCollections.asSet('a','b','c','d','!','#','*'));
      $line=33;
      Object q_0=$fix('I');
      $line=34;
      Object F=$fix(GCollections.asSet('F'));
      $line=36;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Output,q_0,F,new GMethod(code.class,"tr"),new GMethod(code.class,"g"),new GMethod(code.class,"escritura")});
      if (true) break $try;
      $line=37;
      $rethrow(new RuntimeException("The function \"createTransducer()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=39;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"g",$line);
    }
    return $result;
  }
  public static Object tr(java.lang.Iterable $v13, Object entra) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v14=GCollections.unmodifiableCollection($v13).iterator();
      Object x=$v14.next();
      Object y=$v14.next();
      Object z=$v14.next();
      Object m=$v14.next();
      Object n=$v14.next();
      Object p=$v14.next();
      Object i=$v14.next();
      Object f=$v14.next();
      Object o=$v14.next();
      $line=42;
      Object letras=$fix(GCollections.asSet('a','b','c','d'));
      $line=44;
      if (((!$opEqualY(p,'v')&&$opEqualY(i,3))&&$opEqualY(entra,'!'))) {
        $line=45;
        $result='R';
        if (true) break $try;
      }
      $line=48;
      if (($opEqualY(entra,'#')&&$opEqualY(o,1))) {
        $line=49;
        if (!$opEqualY(p,'v')) {
          $line=50;
          $result='F';
          if (true) break $try;
        }
        else {
          $line=51;
          if ($opEqualY(i,3)) {
            $line=52;
            $result='F';
            if (true) break $try;
          }
        }
      }
      else {
        $line=54;
        if (((((((((!$opEqualY(x,'v')&&!$opEqualY(y,'v'))&&!$opEqualY(z,'v'))&&$opEqualY(p,'v'))&&$opEqualY(n,'v'))&&$opEqualY(m,'v'))&&$opEqualY(entra,'#'))&&$opEqualY(i,3))&&$opEqualY(o,1))) {
          $line=55;
          $result='F';
          if (true) break $try;
        }
        else {
          $line=56;
          if (($opEqualY(entra,'!')&&$opEqualY(i,3))) {
            $line=57;
            if ($opEqualY(m,'v')) {
              $line=58;
              $result=GCollections.asList(x,y,z,'v','v','v',0,1,1);
              if (true) break $try;
            }
            else {
              $line=59;
              if (!$opEqualY(p,'v')) {
                $line=60;
                $result=GCollections.asList(x,y,z,m,n,p,0,1,o);
                if (true) break $try;
              }
            }
          }
          else {
            $line=62;
            if (($opEqualY(y,'v')&&$opMembrY(entra,letras))) {
              $line=63;
              $result=GCollections.asList(x,entra,'v','v','v','v',2,f,o);
              if (true) break $try;
            }
            else {
              $line=64;
              if (($opEqualY(z,'v')&&$opMembrY(entra,letras))) {
                $line=65;
                $result=GCollections.asList(x,y,entra,'v','v','v',3,f,o);
                if (true) break $try;
              }
              else {
                $line=66;
                if (($opEqualY(m,'v')&&$opMembrY(entra,letras))) {
                  $line=67;
                  $result=GCollections.asList(x,y,z,entra,'v','v',1,f,o);
                  if (true) break $try;
                }
                else {
                  $line=68;
                  if (($opEqualY(n,'v')&&$opMembrY(entra,letras))) {
                    $line=69;
                    $result=GCollections.asList(x,y,z,m,entra,'v',2,f,o);
                    if (true) break $try;
                  }
                  else {
                    $line=70;
                    if (($opEqualY(p,'v')&&$opMembrY(entra,letras))) {
                      $line=71;
                      $result=GCollections.asList(x,y,z,m,n,entra,3,f,o);
                      if (true) break $try;
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=74;
      $result='E';
      if (true) break $try;
      $line=77;
      $rethrow(new RuntimeException("The function \"tr(\u27E8x,y,z,m,n,p,i,f,o\u27E9:java.lang.Iterable,entra:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"tr",$line);
    }
    return $result;
  }
  public static Object tr(Object estado, Object entra) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=80;
      Object letras=$fix(GCollections.asSet('a','b','c','d'));
      $line=82;
      if ($opEqualY(estado,'E')) {
        $line=83;
        $result='E';
        if (true) break $try;
      }
      else {
        $line=84;
        if (($opEqualY(estado,'I')&&$opMembrY(entra,letras))) {
          $line=85;
          $result=GCollections.asList(entra,'v','v','v','v','v',1,0,0);
          if (true) break $try;
        }
        else {
          $line=86;
          if (($opEqualY(estado,'R')&&$opMembrY(entra,letras))) {
            $line=87;
            $result=GCollections.asList(entra,'v','v','v','v','v',1,0,1);
            if (true) break $try;
          }
          else {
            $line=88;
            if ($opEqualY(estado,'F')) {
              $line=89;
              $result=estado;
              if (true) break $try;
            }
          }
        }
      }
      $line=92;
      $result='E';
      if (true) break $try;
      $line=93;
      $rethrow(new RuntimeException("The function \"tr(estado:Object,entra:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"tr",$line);
    }
    return $result;
  }
  public static Object escritura(Object estado, Object entra) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=96;
      if ($opEqualY(estado,'I')) {
        $line=97;
        $result="";
        if (true) break $try;
      }
      else {
        $line=98;
        if ($opEqualY(estado,'E')) {
          $line=99;
          $result="";
          if (true) break $try;
        }
        else {
          $line=100;
          if ($opEqualY(estado,'F')) {
            $line=101;
            $result="";
            if (true) break $try;
          }
          else {
            $line=102;
            if ($opEqualY(estado,'R')) {
              $line=103;
              $result="";
              if (true) break $try;
            }
          }
        }
      }
      $line=105;
      $rethrow(new RuntimeException("The function \"escritura(estado:Object,entra:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"escritura",$line);
    }
    return $result;
  }
  public static Object escritura(java.lang.Iterable $v15, Object entra) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v16=GCollections.unmodifiableCollection($v15).iterator();
      Object x=$v16.next();
      Object y=$v16.next();
      Object z=$v16.next();
      Object m=$v16.next();
      Object n=$v16.next();
      Object p=$v16.next();
      Object i=$v16.next();
      Object f=$v16.next();
      Object o=$v16.next();
      $line=108;
      if ((((((!$opEqualY(x,'v')&&!$opEqualY(y,'v'))&&!$opEqualY(z,'v'))&&!$opEqualY(m,'v'))&&!$opEqualY(n,'v'))&&!$opEqualY(p,'v'))) {
        $line=109;
        if (((($opEqualY(x,m)&&$opEqualY(y,n))&&$opEqualY(z,p))&&$opEqualY(f,1))) {
          $line=110;
          String cadena1=$cast(String.class,$fix($opAdditY($opAdditY(Character.toString($cast(char.class,x)),Character.toString($cast(char.class,y))),Character.toString($cast(char.class,z)))));
          $line=111;
          $result=$opAdditY($opAdditY($opAdditY(cadena1,Character.toString($cast(char.class,'!'))),Character.toString($cast(char.class,'*'))),Character.toString($cast(char.class,entra)));
          if (true) break $try;
        }
        else {
          $line=113;
          String cadena1=$cast(String.class,$fix($opAdditY($opAdditY($opAdditY($opAdditY($opAdditY($opAdditY($opAdditY(Character.toString($cast(char.class,x)),Character.toString($cast(char.class,y))),Character.toString($cast(char.class,z))),Character.toString($cast(char.class,'!'))),Character.toString($cast(char.class,m))),Character.toString($cast(char.class,n))),Character.toString($cast(char.class,p))),Character.toString($cast(char.class,entra)))));
          $line=114;
          $result=cadena1;
          if (true) break $try;
        }
      }
      else {
        $line=116;
        if ((((((((!$opEqualY(x,'v')&&!$opEqualY(y,'v'))&&!$opEqualY(z,'v'))&&$opEqualY(m,'v'))&&$opEqualY(n,'v'))&&$opEqualY(p,'v'))&&$opEqualY(i,3))&&$opEqualY(entra,'#'))) {
          $line=117;
          String cadena1=$cast(String.class,$fix($opAdditY($opAdditY($opAdditY(Character.toString($cast(char.class,x)),Character.toString($cast(char.class,y))),Character.toString($cast(char.class,z))),Character.toString($cast(char.class,entra)))));
          $line=118;
          $result=cadena1;
          if (true) break $try;
        }
        else {
          $line=120;
          $result="";
          if (true) break $try;
        }
      }
      $line=122;
      $rethrow(new RuntimeException("The function \"escritura(\u27E8x,y,z,m,n,p,i,f,o\u27E9:java.lang.Iterable,entra:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,code.class,"escritura",$line);
    }
    return $result;
  }
}
